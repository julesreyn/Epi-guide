"use strict";(self.webpackChunkepi_guide=self.webpackChunkepi_guide||[]).push([[3316],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(r),m=o,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(h,l(l({ref:t},s),{},{components:r})):n.createElement(h,l({ref:t},s))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},218:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},l="Hello World",i={unversionedId:"c/hello-world",id:"c/hello-world",title:"Hello World",description:"introduction",source:"@site/docs/c/hello-world.mdx",sourceDirName:"c",slug:"/c/hello-world",permalink:"/Epi-guide/docs/c/hello-world",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/c/hello-world.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/Epi-guide/docs/c/Introduction"},next:{title:"Variables",permalink:"/Epi-guide/docs/c/variables"}},p={},c=[{value:"introduction",id:"introduction",level:2},{value:"the program",id:"the-program",level:2},{value:"let&#39;s go through the code step by step:",id:"lets-go-through-the-code-step-by-step",level:3},{value:"compiling and running the program",id:"compiling-and-running-the-program",level:2},{value:"Conclusion",id:"conclusion",level:2}],s={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hello-world"},"Hello World"),(0,o.kt)("h2",{id:"introduction"},"introduction"),(0,o.kt)("p",null,'In this tutorial, we will learn how to write a simple C program that prints "Hello, World!" to the screen. We will also discuss the basic structure of a C program and how to compile and run it.'),(0,o.kt)("h2",{id:"the-program"},"the program"),(0,o.kt)("p",null,"Let's start by writing a simple C program that prints \"Hello, World!\" to the screen. Here's the complete program:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main(void)\n{\n    write(1, "Hello, World!", 13);\n    return 0;\n}\n')),(0,o.kt)("h3",{id:"lets-go-through-the-code-step-by-step"},"let's go through the code step by step:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"We include the ",(0,o.kt)("inlineCode",{parentName:"li"},"stdio.h")," header file. This header file contains the ",(0,o.kt)("inlineCode",{parentName:"li"},"printf")," function, which is used to print text to the screen.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"#include <stdio.h>\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"We define the ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," function. This is the entry point of our program.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"int main(void)\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"We call the ",(0,o.kt)("inlineCode",{parentName:"li"},"write"),' function to print "Hello, World!" to the screen.')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'write(1, "Hello, World!", 13);\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"write")," function takes three arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"the ",(0,o.kt)("inlineCode",{parentName:"p"},"file descriptor")," of the output stream, the ",(0,o.kt)("inlineCode",{parentName:"p"},"string or variable")," to print, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"length")," of the string. "),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"The file descriptor ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," refers to the standard output stream, which is the screen. You can also use ",(0,o.kt)("inlineCode",{parentName:"p"},"2")," to refer to the standard error stream like segfaults.")),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"The string ",(0,o.kt)("inlineCode",{parentName:"p"},'"Hello, World!"')," is the text we want to print.")),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"The length ",(0,o.kt)("inlineCode",{parentName:"p"},"13")," is the number of characters in the string. This is very important, because the ",(0,o.kt)("inlineCode",{parentName:"p"},"write")," function doesn't know how long the string is, so we have to tell it.")))),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"We return ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," to indicate that the program ran successfully.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"return 0;\n")),(0,o.kt)("h2",{id:"compiling-and-running-the-program"},"compiling and running the program"),(0,o.kt)("p",null,"Now that we have written our program, we need to compile it. To compile a C program, we need to use a compiler. The compiler takes the source code of the program and converts it into machine code, which is a series of instructions that the computer can understand. The compiler also performs some checks to make sure that the program is valid."),(0,o.kt)("p",null,"To compile our program, we will use the ",(0,o.kt)("inlineCode",{parentName:"p"},"gcc")," compiler. The ",(0,o.kt)("inlineCode",{parentName:"p"},"gcc")," compiler is the default compiler on most Linux distributions. To compile our program, we will use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gcc hello.c -o hello\n")),(0,o.kt)("p",null,"To run the program, we will use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./hello\n")),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,'In this tutorial, we learned how to write a simple C program that prints "Hello, World!" to the screen. We also discussed the basic structure of a C program and how to compile and run it.\nIf you understand all we talk about in this tutorial, you are ready to move on to the next tutorial, which will teach you how to use variables in C and data types.'))}d.isMDXComponent=!0}}]);