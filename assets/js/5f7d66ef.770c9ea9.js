"use strict";(self.webpackChunkepi_guide=self.webpackChunkepi_guide||[]).push([[3697],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(n),k=r,m=d["".concat(u,".").concat(k)]||d[k]||c[k]||l;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8849:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:4},i="Data Types",o={unversionedId:"c/data-types",id:"c/data-types",title:"Data Types",description:"Introduction",source:"@site/docs/c/data-types.mdx",sourceDirName:"c",slug:"/c/data-types",permalink:"/Epi-guide/docs/c/data-types",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/c/data-types.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Variables",permalink:"/Epi-guide/docs/c/variables"},next:{title:"Operators",permalink:"/Epi-guide/docs/c/Operators"}},u={},s=[{value:"Introduction",id:"introduction",level:2},{value:"What is a data type ?",id:"what-is-a-data-type-",level:2},{value:"Data Types",id:"data-types-1",level:2},{value:"Integer",id:"integer",level:3},{value:"Floating Point",id:"floating-point",level:3},{value:"Character",id:"character",level:3},{value:"Double",id:"double",level:3},{value:"Void",id:"void",level:3},{value:"Boolean",id:"boolean",level:3},{value:"Conclusion",id:"conclusion",level:2}],p={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-types"},"Data Types"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Data type may seem complicated at first, but it's actually quite simple. In this section, we'll go over the basics of data types and how to use them."),(0,r.kt)("h2",{id:"what-is-a-data-type-"},"What is a data type ?"),(0,r.kt)("p",null,"A data type is a classification of data which tells the compiler or interpreter how the programmer intends to use the data. ",(0,r.kt)("br",null),"\nAs human beings, we can easily identify the type of data just by looking at it. For example, if we see the number 5, we know that it's an integer. If we see the number 5.0, we know that it's a floating point number. If we see the word \"Hello\", we know that it's a string. ",(0,r.kt)("br",null),"\nBut how does the computer know what type of data it is ? ",(0,r.kt)("br",null),"\nThe answer is that the programmer tells the computer what type of data it is. ",(0,r.kt)("br",null),"\nWe can do this by using data types. ",(0,r.kt)("br",null)),(0,r.kt)("h2",{id:"data-types-1"},"Data Types"),(0,r.kt)("p",null,"There are 7 main data types in C : ",(0,r.kt)("br",null)),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Integer (int)"),(0,r.kt)("li",{parentName:"ul"},"Floating Point (float)"),(0,r.kt)("li",{parentName:"ul"},"Character (char)"),(0,r.kt)("li",{parentName:"ul"},"Double (double)"),(0,r.kt)("li",{parentName:"ul"},"Void (void)"),(0,r.kt)("li",{parentName:"ul"},"Boolean (bool)")),(0,r.kt)("p",null,"Lets go over each one of them."),(0,r.kt)("h3",{id:"integer"},"Integer"),(0,r.kt)("p",null,'An integer is a whole number like "3" or "100". ',(0,r.kt)("br",null),"\nIn C, an integer can be either a short, an int, or a long. ",(0,r.kt)("br",null)),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Size"),(0,r.kt)("th",{parentName:"tr",align:null},"Range"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"short"),(0,r.kt)("td",{parentName:"tr",align:null},"2 bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-32,768")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"32,767"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"4 bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-2,147,483,648")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"2,147,483,647"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"8 bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-9,223,372,036,854,775,808")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"9,223,372,036,854,775,807"))))),(0,r.kt)("h3",{id:"floating-point"},"Floating Point"),(0,r.kt)("p",null,'A floating point number is a number with a decimal point like "3.14" or "100.0". ',(0,r.kt)("br",null),"\nIn C, a floating point number can be either a float or a double. ",(0,r.kt)("br",null)),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Size"),(0,r.kt)("th",{parentName:"tr",align:null},"Range"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"4 bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1.2E-38")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"3.4E+38"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"8 bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"2.3E-308")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1.7E+308"))))),(0,r.kt)("h3",{id:"character"},"Character"),(0,r.kt)("p",null,'A character is a single letter or symbol like "a" or "!" or "\ud83d\udc4d". ',(0,r.kt)("br",null),"\nIn C, a character is represented by a single quote. ",(0,r.kt)("br",null)),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"char letter = 'a';\nchar symbol = '!';\nchar emoji = '\ud83d\udc4d';\n")),(0,r.kt)("h3",{id:"double"},"Double"),(0,r.kt)("p",null,"A double is a floating point number with a higher precision than a float. ",(0,r.kt)("br",null),"\nIn C, a double is represented by a double quote. ",(0,r.kt)("br",null)),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198938095257201065485863278865936153381827968230301952035301852968995773622599413891249721775283479131515574857242454150695950829533116861727855889075098381754637464939319255060400927701671139009848824012858361603563707660104710181942955596198946767837449448255379774726847104047534646208046684259069491293313677028989152104752162056966024058038150193511253382430035587640247496473263914199272604269922796782354781636009341721641219924586315030286182974555706749838505494588586926995\n")),(0,r.kt)("h3",{id:"void"},"Void"),(0,r.kt)("p",null,"Void is a special data type that is used to define functions that do not return a value. ",(0,r.kt)("br",null),"\nIn C, void is represented by the keyword void. ",(0,r.kt)("br",null)),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'void printHello()\n{\n    printf("Hello");\n}\n')),(0,r.kt)("p",null,"In some case, void can be a data type in function parameters and take the place of any other data type. ",(0,r.kt)("br",null),"\nIf your function can take a parameter of any type, you can use void. ",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"boolean"},"Boolean"),(0,r.kt)("p",null,"A boolean is a data type that can only be true or false. ",(0,r.kt)("br",null),"\nIn C, a boolean is represented by the keyword bool. ",(0,r.kt)("br",null),"\nIt's very useful to make conditionnal statements. ",(0,r.kt)("br",null)),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"bool isTrue = true;\nbool isFalse = false;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <stdbool.h>\n\nint main() {\n    bool isTrue = true;\n    bool isFalse = false;\n\n    if (isTrue) {\n        write("isTrue is true\\n");\n    } else if (isFalse) {\n        write("isFalse is true\\n");\n    } else {\n        write("isTrue and isFalse are false\\n");\n    }\n    return 0;\n}\n')),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"In this tutorial, we learned about data types in C. ",(0,r.kt)("br",null),"\nNow you know how to declare variables and how to use them. It's can be complicated at first, but you will get used to it. ",(0,r.kt)("br",null),"\nIf you have any questions, feel free to ask or search on the internet ! ",(0,r.kt)("br",null)))}c.isMDXComponent=!0}}]);